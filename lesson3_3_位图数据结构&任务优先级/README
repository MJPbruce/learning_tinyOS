
3.1 临界区保护
1、为什么需要临界区保护

临界区保护的目的是为了防止共享资源（包括全局变量等）被同时访问。比如任务1正在进行一个count++的操作，此时调度系统强行切换到任务2运行，任务2中也有count++的操作，那么
我们的count++操作就没有按照我们的设计目的来完成，就会出现原来的修改值被覆盖的问题。或者我们在一个任务中使用count++操作时发生了一个中断，在中断服务程序中操作count也会
出现同样的问题，所以，就需要引入临界区保护的措施。

2、怎么进行临界区的保护

先搞清楚发生共享资源访问冲突的两个种情况：1、任务切换时会发生访问冲突。2、中断发生时会发生访问冲突。
我们知道任务切换时是在PendSV中断中完成的，其本质也是发生了中断，那么在访问一些可能引发冲突的变量时，我们可以暂时关闭所有可屏蔽中断，这样就可以解决资源访问冲突的
问题。

3、这样操作有何缺点

1、关闭可屏蔽中断，使得系统的实时响应变差。
2、关闭可屏蔽中断，系统不能进行任务切换调度，只能执行当前任务中的代码，使得系统实时性变差。


3.2 调度锁保护

1、问什么需要调度锁的保护

1.1 为了解决临界区保护屏蔽所有中断使得系统实时性变差的问题
1.2 有些共享资源访问冲突只是在任务切换中体现，不设计中断中使用，此时我们应该让中断响应正常执行。

2、什么是调度锁保护

调度锁保护顾名思义就是上了调度锁后，调度系统暂时失效，必须要等当前任务被保护部分执行完毕解锁后才能继续进行任务调度。

3、怎么实现调度锁保护

调度锁保护的实现机制很简单，我们定义一个全局变量，当需要使用调度锁的时候，让该全局变量+1，然后再调度函数中判断该全局变量是否为0，如果为0，说明所有的调度锁都已
解锁，那么我们就执行调度算法，如果不为0，那么就有任务上锁了，直接退出。
注意：上锁资源中尽量不要出现延时函数，否则会影响延时效果。


FCARM - Output Name not specified, please check 'Options for Target - Utilities'
错误原因：引入了不知名的文件类型，需要查看文件属性来解决。


3.3 位图

引入位图的概念是为了引入优先级的概念








